// <auto-generated />
using System;
using DAERPLibrary.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DAERPLibrary.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20211222141734_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.11")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("DADataManager.Library.Models.Product.ProductColorDesignModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("MainPartColorName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MainPartRAL")
                        .HasColumnType("int");

                    b.Property<string>("Orientation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PocketColorName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PocketRAL")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("ProductColorDesigns");
                });

            modelBuilder.Entity("DADataManager.Library.Models.Product.ProductDivisionModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Comment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Number")
                        .HasColumnType("int");

                    b.Property<int?>("ProductKindId")
                        .HasColumnType("int");

                    b.Property<int?>("ProductMaterialId")
                        .HasColumnType("int");

                    b.Property<string>("ProductType")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ProductKindId");

                    b.HasIndex("ProductMaterialId");

                    b.ToTable("ProductDivisions");
                });

            modelBuilder.Entity("DADataManager.Library.Models.Product.ProductKindModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Number")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("ProductKinds");
                });

            modelBuilder.Entity("DADataManager.Library.Models.Product.ProductMaterialModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Number")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("ProductMaterials");
                });

            modelBuilder.Entity("DADataManager.Library.Models.Product.ProductModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Accessories")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateLastModified")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Design")
                        .HasColumnType("numeric(4)");

                    b.Property<string>("Designation")
                        .IsRequired()
                        .HasColumnType("nvarchar(15)");

                    b.Property<long>("EAN")
                        .HasMaxLength(13)
                        .HasColumnType("bigint");

                    b.Property<string>("Motive")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ProductColorDesignId")
                        .HasColumnType("int");

                    b.Property<int?>("ProductDivisionId")
                        .HasColumnType("int");

                    b.Property<int?>("ProductStrapId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProductColorDesignId");

                    b.HasIndex("ProductDivisionId");

                    b.HasIndex("ProductStrapId");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("DADataManager.Library.Models.Product.ProductStrapModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Attachment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ColorName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Length")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Material")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RAL")
                        .HasColumnType("int");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Width")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("ProductStraps");
                });

            modelBuilder.Entity("DADataManager.Library.Models.Product.ProductDivisionModel", b =>
                {
                    b.HasOne("DADataManager.Library.Models.Product.ProductKindModel", "ProductKind")
                        .WithMany()
                        .HasForeignKey("ProductKindId");

                    b.HasOne("DADataManager.Library.Models.Product.ProductMaterialModel", "ProductMaterial")
                        .WithMany()
                        .HasForeignKey("ProductMaterialId");

                    b.Navigation("ProductKind");

                    b.Navigation("ProductMaterial");
                });

            modelBuilder.Entity("DADataManager.Library.Models.Product.ProductModel", b =>
                {
                    b.HasOne("DADataManager.Library.Models.Product.ProductColorDesignModel", "ProductColorDesign")
                        .WithMany()
                        .HasForeignKey("ProductColorDesignId");

                    b.HasOne("DADataManager.Library.Models.Product.ProductDivisionModel", "ProductDivision")
                        .WithMany()
                        .HasForeignKey("ProductDivisionId");

                    b.HasOne("DADataManager.Library.Models.Product.ProductStrapModel", "ProductStrap")
                        .WithMany()
                        .HasForeignKey("ProductStrapId");

                    b.Navigation("ProductColorDesign");

                    b.Navigation("ProductDivision");

                    b.Navigation("ProductStrap");
                });
#pragma warning restore 612, 618
        }
    }
}
